<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.mapper.PoemMapper">
  <resultMap id="BaseResultMap" type="com.my.entity.Poem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="BIGINT" property="author" />
    <result column="type" jdbcType="TINYINT" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.my.entity.PoemWithBLOBs">
    <result column="content" jdbcType="LONGVARBINARY" property="content" />
    <result column="annotation" jdbcType="LONGVARBINARY" property="annotation" />
    <result column="appreciate" jdbcType="LONGVARBINARY" property="appreciate" />
  </resultMap>

  <resultMap id="PoemDoResultMap"  type="com.my.domain.PoemDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="name" jdbcType="VARCHAR" property="author" />
    <result column="dynasty" jdbcType="VARCHAR" property="dynasty" />
    <result column="content"  property="content" typeHandler="com.my.MyBlobTypeHandler"/>
    <result column="annotation"  property="annotation" typeHandler="com.my.MyBlobTypeHandler"/>
    <result column="appreciate"  property="appreciate" typeHandler="com.my.MyBlobTypeHandler"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, title, author, type
  </sql>
  <sql id="Blob_Column_List">
    content, annotation, appreciate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from poem
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from poem
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.my.entity.PoemWithBLOBs">
    insert into poem (id, title, author, 
      type, content, annotation, 
      appreciate)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=BIGINT}, 
      #{type,jdbcType=TINYINT}, #{content,jdbcType=LONGVARBINARY}, #{annotation,jdbcType=LONGVARBINARY}, 
      #{appreciate,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.my.entity.PoemWithBLOBs">
    insert into poem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="annotation != null">
        annotation,
      </if>
      <if test="appreciate != null">
        appreciate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARBINARY},
      </if>
      <if test="annotation != null">
        #{annotation,jdbcType=LONGVARBINARY},
      </if>
      <if test="appreciate != null">
        #{appreciate,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.entity.PoemWithBLOBs">
    update poem
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
      <if test="annotation != null">
        annotation = #{annotation,jdbcType=LONGVARBINARY},
      </if>
      <if test="appreciate != null">
        appreciate = #{appreciate,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.my.entity.PoemWithBLOBs">
    update poem
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARBINARY},
      annotation = #{annotation,jdbcType=LONGVARBINARY},
      appreciate = #{appreciate,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.entity.Poem">
    update poem
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listPoems" resultMap="PoemDoResultMap" parameterType="com.my.domain.PoemQueryDo">
    select p.id as id ,p.title as title,a.dynasty as dynasty,a.name as author ,p.content as content,p.annotation as annotation,p.appreciate as appreciate
    from poem p join author a on a.id=p.author
    where 1=1
    <if test='id!=null and id!=""'>
      and p.id=#{id}
    </if>
  </select>
</mapper>