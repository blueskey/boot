<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.mapper.AuthorMapper">
  <resultMap id="BaseResultMap" type="com.my.entity.Item">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="item" jdbcType="VARCHAR" property="item" />
    <result column="length" jdbcType="INT" property="length" />
    <result column="tipFirst" jdbcType="VARCHAR" property="tipFirst" />
    <result column="tipSecond" jdbcType="VARCHAR" property="tipSecond" />
    <result column="tipThird" jdbcType="VARCHAR" property="tipThird" />
    <result column="tipFourth" jdbcType="VARCHAR" property="tipFourth" />
  </resultMap>

  <sql id="Base_Column_List">
    id, item, length,tipFirst,tipSecond,tipThird,tipFourth
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from items
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from items
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.my.entity.Item">
    insert into items (id,item, length,tipFirst,tipSecond,tipThird,tipFourth)
    values (#{id,jdbcType=BIGINT}, #{item,jdbcType=VARCHAR}, #{length,jdbcType=INT}, #{tipFirst,jdbcType=VARCHAR}, #{tipSecond,jdbcType=VARCHAR}, #{tipThird,jdbcType=VARCHAR}, #{tipFourth,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.my.entity.Author">
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="item != null">
        item,
      </if>
      <if test="length != null">
        length,
      </if>
      <if test="tipFirst != null">
        tipFirst,
      </if>
      <if test="tipSecond != null">
        tipSecond,
      </if>
      <if test="tipThird != null">
        tipThird,
      </if>
      <if test="tipFourth != null">
        tipFourth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="item != null">
        #{item,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        #{length,jdbcType=INT},
      </if>
      <if test="tipFirst != null">
        #{tipFirst,jdbcType=VARCHAR},
      </if>
      <if test="tipSecond != null">
        #{tipSecond,jdbcType=VARCHAR},
      </if>
      <if test="tipThird != null">
        #{tipThird,jdbcType=VARCHAR},
      </if>
      <if test="tipFourth != null">
        #{tipFourth,jdbcType=VARCHAR},
      </if>

    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.entity.Item">
    update items
    <set>
      <if test="item != null">
        item = #{item,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        length = #{length,jdbcType=INT},
      </if>
      <if test="tipFirst != null">
        tip_first = #{tipFirst,jdbcType=VARCHAR},
      </if>
      <if test="tipSecond != null">
        tip_second = #{tipSecond,jdbcType=VARCHAR},
      </if>
      <if test="tipThird != null">
        tip_third = #{tipThird,jdbcType=VARCHAR},
      </if>
      <if test="tipFourth != null">
        tip_fourth = #{tipFourth,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.entity.Item">
    update items
    set item = #{item,jdbcType=VARCHAR},
      length = #{length,jdbcType=INT},
        tip_first = #{tipFirst,jdbcType=VARCHAR},
           tip_second = #{tipSecond,jdbcType=VARCHAR},
            tip_third = #{tipThird,jdbcType=VARCHAR},
              tip_fourth = #{tipFourth,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listItems" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from items;

  </select>

  <select id="selectByRandom" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    FROM `items`  AS t1 JOIN (SELECT ROUND(RAND() * (SELECT MAX(id) FROM `items`)) AS id) AS t2 WHERE t1.id >= t2.id
    ORDER BY t1.id ASC LIMIT 1;

  </select>
</mapper>